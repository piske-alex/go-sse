version: '3.8'

services:
  go-sse:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - STORE_TYPE=${STORE_TYPE:-memory}
      # MongoDB connection - Choose one of these options:
      # Option 1: Using full connection string with credentials (preferred for production)
      - MONGO_URI=mongodb://${MONGO_USER:-admin}:${MONGO_PASSWORD:-password}@mongo:27017/${MONGO_DB_NAME:-gosse}?authSource=admin
      # Option 2: Using individual connection parameters
      #- MONGO_HOST=mongo
      #- MONGO_PORT=27017
      #- MONGO_USER=${MONGO_USER:-admin}
      #- MONGO_PASSWORD=${MONGO_PASSWORD:-password}
      #- MONGO_AUTH_DB=admin
      # MongoDB database configuration
      - MONGO_DB_NAME=${MONGO_DB_NAME:-gosse}
      - MONGO_COLLECTION=${MONGO_COLLECTION:-kv_store}
      - MONGO_DOCUMENT_ID=${MONGO_DOCUMENT_ID:-main}
      # Request size configuration
      - MAX_REQUEST_SIZE_MB=${MAX_REQUEST_SIZE_MB:-20}
    restart: unless-stopped
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # MongoDB for persistence
  mongo:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    # Only start MongoDB when STORE_TYPE=mongo
    profiles: ["with-mongo"]
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME:-gosse}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
    healthcheck:
      test: mongosh -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --eval 'db.runCommand("ping").ok' localhost:27017/admin --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Optional MongoDB admin interface
  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-password}
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
    depends_on:
      - mongo
    restart: unless-stopped
    # Only start with MongoDB when STORE_TYPE=mongo
    profiles: ["with-mongo"]

  # Optional Nginx for SSL termination and load balancing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - go-sse
    restart: unless-stopped
    # Uncomment to enable nginx (you'll need to create the config files)
    profiles: ["with-nginx"]

  # Example client web server for testing
  test-client:
    image: nginx:alpine
    ports:
      - "9090:80"
    volumes:
      - ./examples:/usr/share/nginx/html:ro
    restart: unless-stopped
    # Run this service only when explicitly requested
    profiles: ["with-client"]

volumes:
  mongo-data:
